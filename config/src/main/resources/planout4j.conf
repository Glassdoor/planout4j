# Default configuration file for Planout4jRepository implementation
# Needs a backend for *reading* only
# File backend is used by default, expecting to load "compiled" JSON files

# for syntax, see https://github.com/typesafehub/config/blob/master/HOCON.md

planout4j {
  backend {

    source                  = sourceFiles
    # if using redis, override with -Dplanout4j.backend.target=redis
    target                  = compiledFiles

    sourceConfDir           = "_dummy_invalid_path_please_set_planout4j.backend.sourceConfDir_accordingly_"
    compiledConfDir         = "_dummy_invalid_path_please_set_planout4j.backend.compiledConfDir_accordingly_"

    # if using compiledFiles backend, please set planout4j.backend.compiledConfDir property accordingly

    # this backend is used by Planout4jRepositoryImpl to read compiled JSON files
    compiledFiles {
      class                 = com.glassdoor.planout4j.config.Planout4jConfigFileBackend
      # this property must be explicitly set, e.g. using -Dplanout4j.backend.compiledConfDir
      sourceDirHierarchy    = ${planout4j.backend.compiledConfDir}
      destDirHierarchy      = ${planout4j.backend.compiledConfDir}
      inputFileNamesPattern = "*.json"
      outputFileExtension   = ".json"
    }

    # this backend is used by Planout4jConfigShipper to read source YAML with embedded DSL files
    sourceFiles {
      class                 = com.glassdoor.planout4j.config.Planout4jConfigFileBackend
      # this will need to be overridden by each consuming app as -Dplanout4j.backend.sourceConfDir
      sourceDirHierarchy    = ${planout4j.backend.sourceConfDir}
      # no need to override this one unless different file extension is used (e.g. .yml or .p4j)
      inputFileNamesPattern = "*.yaml"
    }

    redis {
      class                 = com.glassdoor.planout4j.config.Planout4jConfigRedisBackend
      # override accordingly with -Dplanout4j.backend.redis.host=...
      host                  = localhost
      # same as above
      port                  = 6379
      # override if same redis instance is used for multiple environments
      key                   = planout4j
    }

  }
}